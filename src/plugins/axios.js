"use strict";

import Vue from 'vue';
import axios from "axios";

import router from '../router'

let v = new Vue();

// Full config:  https://github.com/axios/axios#request-config
// axios.defaults.baseURL = process.env.baseURL || process.env.apiUrl || '';
//axios.defaults.baseURL = 'http://localhost:8081'
axios.defaults.baseURL = 'http://222.201.187.174:8088'
if(localStorage.getItem("token")){
	axios.defaults.headers.common['Authorization'] = "Bearer "+localStorage.getItem("token");
}

// axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';

let config = {
  // baseURL: process.env.baseURL || process.env.apiUrl || ""
  timeout: 60 * 1000, // Timeout
  // withCredentials: true, // Check cross-site Access-Control
};

const _axios = axios.create(config);

_axios.interceptors.request.use(
  function(config) {
    // Do something before request is sent
    return config;
  },
  function(error) {
    // Do something with request error
	//console.log(error)
    return Promise.reject(error);
  }
);

// Add a response interceptor
_axios.interceptors.response.use(
  function(response) {
    // Do something with response data
	//console.log(response)
	if(response.status==201){
		//退出登陆
		clearInterval(localStorage.getItem("timer"));
		localStorage.clear();
		router.push({
				path:"/",
				name:"login",
				params:{}
			})
		v.$confirm('登陆信息过期，请重新登陆', '提示', {
			      showCancelButton: false,
		          confirmButtonText: '确定',
		          type: 'warning'
		        }).then(() => {
					router.go(0);
		        }).catch(() => {
		        });
		}else{
			return response;
		}
    
  },
  function(error) {
    // Do something with response error
	//console.log(error)
	// if(error.response.status==403){
	// 	//退出登陆
	// 	clearInterval(localStorage.getItem("timer"));
	// 	localStorage.clear();
	// 	v.$confirm('登陆信息过期，请重新登陆', '提示', {
	// 		      showCancelButton: false,
	// 	          confirmButtonText: '确定',
	// 	          type: 'warning'
	// 	        }).then(() => {
	// 				router.push({
	// 					path:"/",
	// 					name:"login",
	// 					params:{}
	// 				})
	// 			   router.go(0)
	// 			  //this.reload()
	// 	        }).catch(() => {
	// 	        });
	// }
    return Promise.reject(error);
  }
);

Plugin.install = function(Vue, options) {
  Vue.axios = _axios;
  window.axios = _axios;
  Object.defineProperties(Vue.prototype, {
    axios: {
      get() {
        return _axios;
      }
    },
    $axios: {
      get() {
        return _axios;
      }
    },
  });
};

Vue.use(Plugin)

export default Plugin;
